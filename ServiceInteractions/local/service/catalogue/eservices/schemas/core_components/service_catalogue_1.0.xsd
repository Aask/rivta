<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements. See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership. Sveriges Kommuner och Landsting licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License. You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied. See the License for the
 specific language governing permissions and limitations
 under the License.
 -->		
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:riv:service:catalogue:1"
  targetNamespace="urn:riv:service:catalogue:1" elementFormDefault="qualified"
  attributeFormDefault="unqualified" version="1.0">

  <xs:complexType name="ServiceTransactionType">
    <xs:annotation>
      <xs:documentation>When deleteFlag is set to true, the given careUnitId will be deleted from the catalogue.
        When set to false a create or update will be performed.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="deleteFlag" type="xs:boolean"/>
      <xs:element name="service" type="tns:ServiceType"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ServiceType">
    <xs:sequence>
      <xs:element name="careUnit" type="tns:CareUnitType"/>
      <xs:element name="validFrom" type="tns:DateType">
        <xs:annotation>
          <xs:documentation>Valid date from when this care unit starts handling type of cares.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="validTo" type="tns:DateType">
        <xs:annotation>
          <xs:documentation>Date when this care unit stops handling type of cares.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="supportedInteractions" type="tns:SupportedInteractionsType"/>
      <xs:element name="sourceSystem" type="tns:HsaIdType"/>
      <xs:element name="typeOfCare" type="tns:TypeOfCareType"/>
      <xs:element name="typeOfCareServices" type="tns:CauseType"/>
      <xs:element name="creationTime" type="tns:TS" minOccurs="0"/>
      <xs:element name="updateTime" type="tns:TS" minOccurs="0"/>
      <xs:element name="administrativeInformation" type="tns:AdministrativeInformationType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Administrative information maxlength 8192 characters -->
  <xs:simpleType name="AdministrativeInformationType">
    <xs:annotation>
      <xs:documentation>Placeholder for administrative information, for example info block from TakeCare.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="8192"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Date format SSYYMMDD -->
  <xs:simpleType name="DateType">
    <xs:annotation>
      <xs:documentation>Date format SSYYMMDD</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(19|20)\d\d(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- -->
  <xs:complexType name="CareUnitType">
    <xs:annotation>
      <xs:documentation>careUnitId == HSAid, careUnitName, careUnitAddress</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="careUnitId" type="tns:HsaIdType"/>
      <xs:element name="careUnitName" type="tns:CareUnitNameType"/>
      <xs:element name="careUnitAddress" type="tns:CareUnitAddressType"/>
    </xs:sequence>
  </xs:complexType>

  <!--  -->
  <xs:simpleType name="CareUnitNameType">
    <xs:annotation>
      <xs:documentation>Care unit name, corresponds to ... in HSA</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1024"/>
    </xs:restriction>
  </xs:simpleType>
  
  <!--  -->  
  <xs:complexType name="CareUnitAddressType">
    <xs:sequence>
      <xs:element name="streetName1">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="35"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="streetName2" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="35"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="streetName3" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="35"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="postalCode">
        <xs:annotation>
          <xs:documentation>Postal code is always represented as 3 numbers and 2 numbers separated with a space 
          For example: 123 45
        </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]{3,3}\s[0-9]{2,2}"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="postalCity">
        <xs:annotation>
          <xs:documentation>Postal city, maxlength 27 characters.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="27"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- -->
  <xs:complexType name="SupportedInteractionsType">
    <xs:annotation>
      <xs:documentation>When electronic is set to true each supported interactions must be listed.</xs:documentation>
    </xs:annotation>    
    <xs:sequence>
      <xs:element name="electronic" type="xs:boolean">
        <xs:annotation><xs:documentation>Set to true if the given care unit can handle electronic requests.</xs:documentation></xs:annotation>
      </xs:element>
      <xs:sequence>
        <xs:annotation>
          <xs:documentation>Each service domain that can be used for the given care unit id.
            For example set interaction to urn:clinicalprocess:requestflow:ProcessRequest and urn:clinicalprocess:requestflow:ProcessRequestOutcome
            if the care unit can recieve requests and send request answers.
          </xs:documentation>
        </xs:annotation>
        <xs:element name="interaction" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>

  <!-- -->
  <xs:complexType name="TypeOfCareType">
    <xs:annotation>
      <xs:documentation></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- -->
  <xs:complexType name="CauseType">
    <xs:annotation>
      <xs:documentation></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- -->
  <xs:simpleType name="HsaIdType">
    <xs:restriction base="xs:string"><xs:maxLength value="64"/></xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TS">
    <xs:restriction base="xs:string">
      <xs:pattern
        value="[1-9]{1}[0-9]{3}(0[1-9]{1}|1[0-2]{1})([0-2]{1}[0-9]{1}|3[0-1]{1})([0-1]{1}[0-9]{1}|2[0-3]{1})[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}"
      />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DT">
    <xs:restriction base="xs:string">
      <xs:pattern value="[1-9]{1}[0-9]{3}(0[1-9]{1}|1[0-2]{1})([0-2]{1}[0-9]{1}|3[0-1]{1})"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ResultCodeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OK"/>
      <xs:enumeration value="ERROR"/>
      <xs:enumeration value="INFO"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
